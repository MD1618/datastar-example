{# macro to generate markup for select filters #}
{% macro selectFilter(name, label, options, selectedOptionSlug) %}
    {% if options %}
        <div class="flex flex-col w-full gap-1">
            <label for="{{ name }}">{{ label }}</label>

            <select
                name="{{ name }}"
                class="border filters-select"
                data-bind="{{ name }}"
                >
                <option value="">All</option>

                {% for option in options %}
                    <option value="{{ option.slug }}" {{ option.slug == selectedOptionSlug ? 'selected' }}>{{ option.title }}</option>
                {% endfor %}
            </select>
        </div>
    {% endif %}
{% endmacro %}

{% set sectionHandle = sectionHandle ?? null %}
{% set limit = limit ?? 12 %}

{# get query parameters to set initial filter state #}
{% set search = craft.app.request.getParam('search') ?? null %}
{% set category = craft.app.request.getParam('category') ?? null %}
{% set page = craft.app.request.getParam('page') ?? 1 %}

{# initialise showClearFilters #}
{% set showClearFilters = false %}

{# initialise the entry query #}
{% set entryQuery = craft.entries.section(sectionHandle).limit(limit).with(craft.app.config.custom.relatedPageEagerLoadElements) %}

{# add search term to entry query #}
{% if search %}
    {% do entryQuery.search(search) %}
    {% set showClearFilters = true %}
{% endif %}

{# add relatedTo items to entry query #}
{% set relatedToEntries = [] %}

{# add category dropdown to relatedToEntries #}
{% if category %}
    {% set categoryEntry = category ? craft.entries.section('categories').slug(category).one() : null %}
    {% set relatedToEntries = category ? relatedToEntries|push(categoryEntry) : relatedEntries %}
    {% set showClearFilters = true %}
{% endif %}

{# add relatedToEntries to entry query #}
{% if relatedToEntries %}
    {% do entryQuery.relatedTo(relatedToEntries) %}
{% endif %}

{# get results and paginate #}
{% paginate entryQuery as pageInfo, entries %}

{% set datastarQuery = datastar.get('site/_datastar/search.twig') %}

<div class="scroll-mt-0" id="results-page" data-signals="{page: {{ pageInfo.currentPage }}, search: '{{ search }}', category: '{{ category }}'}">
    <div class="py-8 bg-grey-200">
        <div class="container">
            <div class="flex flex-col gap-6 md:flex-row flex-nowrap form">
                <div class="flex flex-col w-full gap-1">
                    <label class="col-span-1" for="search">Search</label>
                    <input
                        name="search"
                        type="search"
                        value="{{ search }}"
                        placeholder="Search"
                        class="col-span-1 border"
                        data-bind="search"
                        data-on-change="$page = 1;{{ datastarQuery }}"
                    >
                </div>

                {{ _self.selectFilter(
                    'category',
                    'Category',
                    craft.misc.getUsedCategories('categories', sectionHandle),
                    category,
                ) }}

                <div class="mt-auto">
                    <button class="w-auto font-semibold btn btn-grey-dark btn-filter" data-on-click="$page = 1;{{ datastarQuery }}">
                        Search
                    </button>
                </div>
            </div>

            <div class="flex justify-between w-full mt-6 type-sm">
                <div id="results-info">Page {{ pageInfo.currentPage }} of {{ pageInfo.total }} {{ 'result'|pluralize(pageInfo.total) }}</div>
                    <button
                        id="clear-filters"
                        class="flex items-center cursor-pointer {{ showClearFilters ? "" : "!hidden" }}"
                        data-on-click="$page = 1; $category = '';$search = '';{{ datastarQuery }}"
                    >
                        <span class="block w-3 mr-2">{{ svg("@webroot/assets/img/svg/close.svg") }}</span>
                        <span>Clear All</span>
                    </button>
            </div>
        </div>
    </div>

    <div class="container relative">
        <div class="py-12">
            {# cards #}
            <div class="grid gap-8 md:grid-cols-3" id="results">
                {% for _entry in entries %}
                    {% include "card.twig" %}
                {% else %}
                    <div class="col-span-full">
                        <p>No results found</p>
                    </div>
                {% endfor %}
            </div>
        </div>

        {% include "pagination" %}
    </div>
</div>
